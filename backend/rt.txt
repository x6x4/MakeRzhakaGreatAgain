int reverse(a) {
    right
    right
    right
}

int rCorrection(a) {
    right
    right
    backward
    left 
    left 
    forward
    left 
    forward
    left
    left 
    forward
}

int lCorrection(a) {
    left
    left
    backward
    right
    right
    forward
    right
    forward
    right
    right
    forward 
}

int up(a) {
    status := t
    while (status) {
        left
        left 
        status := forward
        if (status) {
            right
            right
            status := forward
        }
    
    }
}

int main(void) {
    void := 6
    right 
    right
    a := look
    if (a = 0) {
        //  обход хуйни (коробки)
        right
        forward
        left
        forward
        left
        forward
        left
        forward
        left
        forward
        return
    }
 
    if (a = 0) {
        left 
        up(0)
        reverse(0)
        up(0)
        reverse(0)
        forward
        left
        forward
        reverse(0)
        up(0)
        return
    }
 
    a := look
    while (a > 0) {
        forward
        a:= a - 1
    }
    reverse(0)
    forward
    while (t) {
        right 
        right
        if (forward) {
            a := 0
        } 
        eldef {
            left 
            left
            left
            forward
            up(0)
            left
            up(0)
            return
        }
        elund {
            lCorrection(a)
        }
            left 
            left 
            if (forward) {
                a:=0
            }
            eldef {
                left
                forward
                right
                forward
                forward
                right
                right
                forward
                return
            }
            elund {
                rCorrection(a)
            }
    }

}
